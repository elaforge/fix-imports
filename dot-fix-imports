-- fix-imports looks for a .fix-imports file in the current directory for
-- per-project configuration.  You can set the file explicitly with --config.
--
-- The syntax is like ghc-pkg or cabal: word, colon, and a list of words.
-- A line with leading space is a continuation of the previous line.
-- Comments are written with "--".

-- Include extra directories on the search path.  Directories passed via -i
-- go before this list.
include: dist/build/my-project/my-project-tmp

-- Control the sorting of the import list by prefix.  A trailing dot
-- like "M." matches exactly M or anything starting with "M.".
-- These go in the given order, before other imports.
import-order-first: Util.
-- These go in the given order, but after all the other imports.
import-order-last: Global
-- If present at all (the 't' argument is irrelevant), unqualified import-all
-- lines always go last.  The idea is that they should be special, and this
-- helps them stand out.
sort-unqualified-last: t

-- When there are multiple candidates for a module, prefer or don't prefer
-- ones from these lists.  These are exact matches:
prio-module-high: Ui
prio-module-low: GHC

-- Or increase or decrease priority for an entire package:
prio-package-high:
-- haskell98 and ghc export a lot of toplevel modules that most programs
-- don't want to import.
prio-package-low: haskell98 ghc Cabal

-- In the abscence of prio-* config, the module with the least number of dots
-- is picked.  Usually packages put the most "public" modules at the top, e.g.
-- IO should choose System.IO, not Data.Text.Lazy.IO

-- Manage these symbols as unqualified imports.  Use ()s for operators.
-- The syntax is meant to resemble import syntax, separated by semicolons:
unqualified: Data.Bifunctor (first, second); System.FilePath ((</>))

-- DTL.something will turn into a search for Data.Text.Lazy.
qualify-as: Data.Text.Lazy as DTL; Data.Vector.Unboxed as VU

format:
    -- Insert a space gap for the "qualified" keyword.
    leave-space-for-qualified
    -- Suppress the usual behaviour where imports are grouped by the first
    -- component.
    no-group
    -- If there is a long explicit import list, it might have to be wrapped.
    -- Wrap to this many columns.
    columns=80

-- Space separated list of extensions that are enabled by default.
language: GeneralizedNewtypeDeriving
